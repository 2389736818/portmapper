<project name="PortMapper" basedir="." default="build-one-jar">

	<property name="project.dir" location="./" />
	<property name="src.dir" location="${project.dir}/src" />
	<property name="weupnp.src.dir" location="${project.dir}/src_weupnp" />
	<property name="build.dir" location="${project.dir}/build" />
	<property name="classes.dir" location="${build.dir}/classes" />
	<property name="build.resources.dir" location="${classes.dir}/org/chris/portmapper/resources/" />
	<property name="src.resources.dir" location="${src.dir}/org/chris/portmapper/resources/" />
	<property name="jar.dir" location="${build.dir}/jar" />

	<property name="main-class" value="org.chris.portmapper.PortMapperApp" />

	<buildnumber />
	<property name="lib.dir" location="${project.dir}/lib" />

	<property name="one-jar.version" value="0.96" />
	<taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" classpath="${lib.dir}/one-jar-ant-task-${one-jar.version}.jar" onerror="report" />

	<path id="classpath" description="The JARs needed for compiling">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<target name="clean" description="Create the build directorys and remove their content">
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${classes.dir}" />
		<delete includeEmptyDirs="true">
			<fileset dir="${classes.dir}" includes="**/*" defaultexcludes="no" />
			<fileset dir="${jar.dir}" includes="**/*" defaultexcludes="no" />
		</delete>
	</target>

	<target name="get_version_number" description="Prompt the user for the version number">
		<input message="Enter version number of new build." addproperty="version.number" />
		<exec executable="svnversion" outputproperty="svn.revision.number" failonerror="true">
			<arg line="-n" />
			<arg path="${project.dir}" />
		</exec>
		<echo>Version number:      ${version.number}</echo>
		<echo>Build number:        ${build.number}</echo>
		<echo>SNV revision number: ${svn.revision.number}</echo>
	</target>

	<target name="compile" depends="clean" description="Compile the Java source files">
		<javac srcdir="${weupnp.src.dir}" destdir="${classes.dir}" classpathref="classpath" debug="true" target="1.5" source="1.5">
			<exclude name="**/fokus/*" />
			<exclude name="**/htmlunit/*" />
		</javac>
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" debug="true" target="1.5" source="1.5">
			<exclude name="**/fokus/*" />
			<exclude name="**/htmlunit/*" />
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
	</target>

	<target name="prepare_language_files" depends="get_version_number" description="Convert the encoding of the language property files and copy them to the build dir">
		<exec executable="native2ascii" failonerror="true">
			<arg value="-encoding" />
			<arg value="ISO-8859-1" />
			<arg file="${src.resources.dir}/PortMapperApp_de.properties" />
			<arg file="${build.resources.dir}/PortMapperApp_de.properties" />
		</exec>

		<exec executable="native2ascii" failonerror="true">
			<arg value="-encoding" />
			<arg value="ISO-8859-1" />
			<arg file="${src.resources.dir}/ConnectTask_de.properties" />
			<arg file="${build.resources.dir}/ConnectTask_de.properties" />
		</exec>

		<exec executable="native2ascii" failonerror="true">
			<arg value="-encoding" />
			<arg value="ISO-8859-1" />
			<arg file="${src.resources.dir}/PortMapperApp_nb.properties" />
			<arg file="${build.resources.dir}/PortMapperApp_nb.properties" />
		</exec>

		<exec executable="native2ascii" failonerror="true">
			<arg value="-encoding" />
			<arg value="ISO-8859-1" />
			<arg file="${src.resources.dir}/ConnectTask_nb.properties" />
			<arg file="${build.resources.dir}/ConnectTask_nb.properties" />
		</exec>

		<copy file="${build.resources.dir}/PortMapperApp_en.properties" tofile="${build.resources.dir}/PortMapperApp.properties" />
		<copy file="${build.resources.dir}/ConnectTask_en.properties" tofile="${build.resources.dir}/ConnectTask.properties" />
		<replace casesensitive="false" dir="${classes.dir}" includes="**/*.properties" token="@@VERSION_NUMBER@@" value="${version.number}" />
		<replace casesensitive="false" dir="${classes.dir}" includes="**/*.properties" token="@@BUILD_NUMBER@@" value="${build.number}" />
		<replace casesensitive="false" dir="${classes.dir}" includes="**/*.properties" token="@@SVN_REVISION_NUMBER@@" value="${svn.revision.number}" />
	</target>

	<target name="jar" depends="clean, compile, prepare_language_files" description="Create a JAR containing the class files">
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
		</jar>
	</target>

	<target name="build-one-jar" depends="clean,get_version_number,compile,prepare_language_files" description="Create a JAR file containing all necessary libraries">
		<mkdir dir="${jar.dir}" />
		<!-- Construct the One-JAR file -->
		<one-jar destfile="${jar.dir}/${ant.project.name}-${version.number}.jar" manifest="one-jar.mf">
			<main>
				<!-- Construct main.jar from classes and source code -->
				<fileset dir="${classes.dir}" />
			</main>
			<lib>
				<fileset file="${lib.dir}/*.jar" />
			</lib>
		</one-jar>
	</target>

	<target name="run" depends="build-one-jar" description="Run PortMapper">
		<java jar="${jar.dir}/${ant.project.name}-${version.number}.jar" fork="true" />
	</target>

</project>